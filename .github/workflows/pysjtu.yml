name: PySJTU Tests

on: [ push, pull_request ]

jobs:
  test:

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python: [ "3.8", "3.9", "3.10", "3.11" ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM and Python ${{ matrix.python }}
        with:
          python-version: ${{ matrix.python }}
          cache: true
          version: 2.4.0

      - name: Mac dependencies
        if: startsWith(runner.os, 'macOS')
        uses: mstksg/get-package@v1
        with:
          brew: libomp

      - name: Install dependencies
        if: ${{ matrix.python != '3.11' }}
        run: pdm sync -G tests -G ocr

      - name: Install dependencies
        if: ${{ matrix.python == '3.11' }}
        run: pdm sync -G tests

      - name: Test if no syntax error
        run: pdm run flake8 . --exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Test with pytest
        run: pdm run pytest --cov-report xml --cov=pysjtu

      - name: Setup Java JDK
        if: matrix.os == 'ubuntu-latest' && matrix.python == '3.7' && github.repository == 'PhotonQuantum/pysjtu'
        uses: actions/setup-java@v2
        with:
          java-version: 8
          java-package: jre
          distribution: 'liberica'

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.python == '3.8' && github.repository == 'PhotonQuantum/pysjtu'
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_COVERAGE_TOKEN }}
        run: |
          curl -LS -o codacy-coverage-reporter-assembly.jar "$(curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(".jar"))) | .[0].browser_download_url')"
          java -jar codacy-coverage-reporter-assembly.jar report -l Python -r coverage.xml
